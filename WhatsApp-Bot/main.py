from whatsapp_chatbot_python import GreenAPIBot, Notification
import json

with open('API.json', 'r') as file:
    data = json.load(file)

bot = GreenAPIBot(data["token"], data["api_key"])

COMMANDS = {
    "start": "ü§ñ Hello! I'm the bot for IKEA employees.\n"
             "I can show the schedule, contact details, store addresses, and other useful information.\n\n"
             "üë®‚Äçüíª Developer: Denis Shulzhenko (OPK-411)\n"
             "üìå Type 'help' to learn more about what I can do.",

    "help": "üìå Available commands:\n"
            "- schedule ‚Äî show the list of employees\n"
            "- ikea addresses ‚Äî show IKEA store addresses in Sweden\n"
            "- contacts ‚Äî contact information for IKEA\n"
            "- ikea job ‚Äî details about working at IKEA\n"
            "- store hours ‚Äî show IKEA store working hours\n"
            "- product info ‚Äî information about popular IKEA products\n"
            "- employee benefits ‚Äî details about employee benefits at IKEA\n"
            "- events ‚Äî list of upcoming events and promotions in IKEA stores\n"
            "- career growth ‚Äî opportunities for career growth in IKEA\n"
            "- job apply ‚Äî apply for a job at IKEA",

    "contacts": "üìû Contact Information for IKEA:\n"
                "üìß Email: support@ikea.com\n"
                "üìû Phone: +46 700000000\n\n"
                "üíº For job opportunities, type 'ikea job'.",

    "ikea addresses": "üìç IKEA Store Addresses in Sweden:\n"
                      "[IKEA Stockholm - Kungens Kurva](https://www.ikea.com/se/sv/store/stockholm-kungens-kurva)\n"
                      "[IKEA Malm√∂ - Fosie](https://www.ikea.com/se/sv/store/malmo-fosie)\n"
                      "[IKEA Gothenburg - B√§ckebol](https://www.ikea.com/se/sv/store/gothenburg-backebol)\n"
                      "[IKEA Helsingborg](https://www.ikea.com/se/sv/store/helsingborg)\n"
                      "[IKEA Uppsala](https://www.ikea.com/se/sv/store/uppsala)\n"
                      "[IKEA Link√∂ping](https://www.ikea.com/se/sv/store/linkoping)\n"
                      "[IKEA T√§by](https://www.ikea.com/se/sv/store/taby)\n"
                      "[IKEA √ñrebro](https://www.ikea.com/se/sv/store/orebro)",

    "ikea job": "üíº IKEA offers great working conditions, including:\n"
            "- Hourly wage: between 100 and 200 SEK, depending on the position and experience.\n"
            "- Flexible working hours and a dynamic team environment.\n"
            "- Opportunities for personal growth and advancement.\n"
            "- Discounts on IKEA products and other employee benefits.\n\n"
            "### Job Requirements:\n"
            "1. **Age**: Must be at least 18 years old.\n"
            "2. **Work Experience**: Previous work experience in retail or customer service is preferred but not required.\n"
            "3. **Language Skills**: Proficiency in Swedish (or English for certain positions).\n"
            "4. **Availability**: Must be available to work flexible hours, including evenings, weekends, and holidays.\n"
            "5. **Team Player**: Ability to work well in a team and collaborate with colleagues to achieve store goals.\n"
            "6. **Communication Skills**: Strong communication skills and ability to interact with customers in a friendly and professional manner.\n"
            "7. **Physical Stamina**: Ability to stand for long periods and lift heavy items (depending on the role).\n"
            "8. **Customer Focus**: A passion for customer service and a desire to help others.\n"
            "9. **Motivation**: Strong motivation to develop and grow within the company.\n"
            "10. **Work Permit**: For non-Swedish residents, a valid work permit may be required.",


    "store hours": "üïí IKEA Store Hours in Sweden:\n"
                   "üìç IKEA Stockholm - Kungens Kurva: 10:00 AM - 9:00 PM\n"
                   "üìç IKEA Malm√∂ - Fosie: 10:00 AM - 9:00 PM\n"
                   "üìç IKEA Gothenburg - B√§ckebol: 10:00 AM - 9:00 PM\n"
                   "üìç IKEA Helsingborg: 10:00 AM - 8:00 PM\n"
                   "üìç IKEA Uppsala: 10:00 AM - 8:00 PM\n"
                   "üìç IKEA Link√∂ping: 10:00 AM - 8:00 PM\n"
                   "üìç IKEA T√§by: 10:00 AM - 9:00 PM\n"
                   "üìç IKEA √ñrebro: 10:00 AM - 8:00 PM",

    "product info": "üõí Popular IKEA Products:\n"
                    "- [Billy Bookcase](https://www.ikea.com/se/sv/p/billy-bookcase-white-00263850/): Classic bookcase available in multiple sizes.\n"
                    "- [Kallax Shelving Unit](https://www.ikea.com/se/sv/p/kallax-shelving-unit-white-00253847/): Versatile storage solution.\n"
                    "- [Po√§ng Armchair](https://www.ikea.com/se/sv/p/poang-armchair-birch-veneer-light-brown-20355707/): Comfortable armchair with ergonomic design.\n"
                    "- [Hemnes Dresser](https://www.ikea.com/se/sv/p/hemnes-dresser-white-90324792/): Stylish and spacious dresser for any bedroom.",

    "employee benefits": "üíº IKEA Employee Benefits:\n"
                         "- Discounts on IKEA products.\n"
                         "- Health insurance.\n"
                         "- Flexible working hours.\n"
                         "- Opportunities for career growth and development.\n"
                         "- Paid parental leave and vacation days.\n"
                         "- Access to employee wellness programs.",

    "events": "üéâ Upcoming IKEA Events & Promotions:\n"
              "üìÖ IKEA Stockholm - Kungens Kurva: Spring Sale, March 20th-25th.\n"
              "üìÖ IKEA Malm√∂ - Fosie: DIY Workshops, March 27th.\n"
              "üìÖ IKEA Gothenburg - B√§ckebol: Family Day, April 5th.\n"
              "üìÖ IKEA Helsingborg: Seasonal Sale, April 10th-15th.\n"
              "üìÖ IKEA Uppsala: Cooking Class, April 12th.\n"
              "üìÖ IKEA Link√∂ping: Interior Design Consultation, April 17th.",

    "career growth": "üìà Career Growth at IKEA:\n"
                     "- Continuous learning opportunities.\n"
                     "- Leadership development programs.\n"
                     "- Opportunities to work internationally.\n"
                     "- Employee-driven projects for innovation.\n"
                     "- Mentorship programs to help you succeed at IKEA",

    "job apply": "üìã –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç—É: –î–ª—è –ø–æ–¥–∞—á—ñ –Ω–∞ —Ä–æ–±–æ—Ç—É, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É –∑–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ª—ñ–Ω–∫–æ–º:\n" 
                 "[–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç—É –≤ IKEA](https://docs.google.com/forms/d/1yRwykwm4MZopJihvkZ-8ZTruKsF0CT_7XVE_FucR42g/edit)"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ —ñ–∑ schedule.json
def load_schedule():
    with open("schedule.json", "r", encoding="utf-8") as file:
        return json.load(file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—Ö—ñ–¥–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@bot.router.message()
def message_handler(notification: Notification) -> None:
    text = notification.message_text.strip().lower()  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤–≤–µ–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'start'
    if text == "start":
        response = COMMANDS["start"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'help'
    elif text == "help":
        response = COMMANDS["help"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'contacts'
    elif text == "contacts":
        response = COMMANDS["contacts"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'ikea addresses'
    elif text == "ikea addresses":
        response = COMMANDS["ikea addresses"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'ikea job'
    elif text == "ikea job":
        response = COMMANDS["ikea job"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'store hours'
    elif text == "store hours":
        response = COMMANDS["store hours"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'product info'
    elif text == "product info":
        response = COMMANDS["product info"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'employee benefits'
    elif text == "employee benefits":
        response = COMMANDS["employee benefits"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'events'
    elif text == "events":
        response = COMMANDS["events"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'career growth'
    elif text == "career growth":
        response = COMMANDS["career growth"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'job apply'
    elif text == "job apply":
        response = COMMANDS["job apply"]

    # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ 'schedule' –¥–ª—è –ø–æ–∫–∞–∑—É —Å–ø–∏—Å–∫—É —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤
    elif text == "schedule":
        schedule_data = load_schedule()  # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ —ñ–∑ schedule.json
        employee_list = "\n".join([name for name in schedule_data.keys()])
        response = f"üìã List of employees:\n{employee_list}\n\nPlease type the name of the employee to see their details (e.g., 'Fredrik Olofsman')."

    # –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    elif text.title() in [name.title() for name in load_schedule().keys()]:
        employee_name = text.title()  # –ö–æ—Ä–µ–∫—Ç–Ω–µ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
        schedule_data = load_schedule()  # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ —ñ–∑ schedule.json

        employee = schedule_data[employee_name]
        response = f"üìÖ {employee_name}'s schedule: {employee['schedule']}\n\n"
        response += f"üìö Education: {employee['education']}\n"
        response += f"üéÇ Age: {employee['age']}\n"
        response += f"üè† Address: {employee['address']}\n"
        response += f"üíº Experience: {employee['experience']}\n"
        response += f"‚ù§Ô∏è Marital Status: {employee['marital_status']}\n"
        response += f"üìû Phone: {employee['phone']}\n"
        response += f"‚úâÔ∏è Email: {employee['email']}\n"
        response += f"üí¨ WhatsApp: {employee['whatsapp']}"

    # –û–±—Ä–æ–±–∫–∞ –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∫–æ–º–∞–Ω–¥
    else:
        response = "‚ùå Command not found. Type 'help' to see the available commands."

    notification.answer(response)

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
bot.run_forever()